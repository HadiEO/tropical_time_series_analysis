///////////////////////////////////////////////////////////////////////////////////////////////////////////
// Need to export count raster by YEAR, so make function, and loop?
// see https://gis.stackexchange.com/questions/236707/how-can-i-export-a-set-of-images-from-google-earth-engine
///////////////////////////////////////////////////////////////////////////////////////////////////////////

// // list of images (client side)
// var imgs = images.getInfo()["features"]

// // loop on client side
// for (var i = 0; i<imgs.length;i++) {
//   var im = ee.Image(imgs[i]["id"]);
//   Map.addLayer(im)
//   Export.image.toDrive({
//     image: im,
//     description: 'true-color-composite',
//     scale: 30
//   });
// }

var Kalimantan = /* color: #ffc82d */ee.Geometry.Polygon(
        [[[109.16015625, 2.1088986592431382],
          [108.8525390625, 1.5818302639606454],
          [108.5888671875, 0.7470491450051796],
          [108.7646484375, -0.13183582116662096],
          [109.072265625, -1.1425024037061522],
          [109.599609375, -1.4939713066293112],
          [109.775390625, -2.0210651187669897],
          [109.9072265625, -2.943040910055132],
          [110.654296875, -3.2502085616531686],
          [111.5771484375, -3.2502085616531686],
          [111.7529296875, -3.8204080831949407],
          [112.412109375, -3.601142320158722],
          [112.8515625, -3.4256915244180624],
          [113.4228515625, -3.6449998008920375],
          [114.2138671875, -3.8642546157213955],
          [114.521484375, -4.477856485570586],
          [115.1806640625, -4.214943141390639],
          [115.83984375, -4.127285323245357],
          [115.9716796875, -4.609278084409823],
          [116.455078125, -4.171115454867424],
          [116.6748046875, -3.7765593098768635],
          [116.71875, -3.074695072369682],
          [116.806640625, -2.460181181020993],
          [116.7626953125, -1.8893059628373186],
          [117.333984375, -1.318243056862001],
          [117.7294921875, -0.8349313860427057],
          [117.7734375, -0.3076157096439005],
          [117.9052734375, 0.26367094433665017],
          [118.4326171875, 0.5273363048115169],
          [119.00390625, 0.21972602392080884],
          [119.3115234375, 0.39550467153201946],
          [119.091796875, 1.4061088354351594],
          [118.8720703125, 1.7575368113083254],
          [118.4326171875, 2.1088986592431382],
          [118.30078125, 2.4162756547063857],
          [117.94921875, 2.943040910055132],
          [117.9931640625, 3.4695573030614724],
          [118.4326171875, 4.083452772038619],
          [117.9052734375, 4.521666342614804],
          [117.333984375, 4.784468966579362],
          [116.3232421875, 4.8282597468669755],
          [115.576171875, 4.434044005032582],
          [115.3125, 3.6888551431470478],
          [114.78515625, 3.074695072369695],
          [114.5654296875, 2.5040852618529215],
          [114.43359375, 1.8014609294680355],
          [113.90625, 1.6696855009865839],
          [113.3349609375, 1.9332268264771233],
          [112.8515625, 2.0210651187669897],
          [112.1923828125, 1.7575368113083254],
          [111.708984375, 1.4061088354351594],
          [111.09375, 1.3182430568620136],
          [110.4345703125, 1.4939713066293239],
          [110.0390625, 1.9332268264771233],
          [109.599609375, 2.3723687086440504]]]),
    Sumatera = /* color: #ff0000 */ee.Geometry.Polygon(
        [[[94.9658203125, 5.528510525692801],
          [95.009765625, 4.740675384778373],
          [95.5810546875, 4.083452772038619],
          [95.9765625, 3.6888551431470478],
          [96.767578125, 3.2063329870791444],
          [97.294921875, 2.547987871471383],
          [97.8662109375, 1.9332268264771233],
          [98.4375, 1.4939713066293239],
          [98.7451171875, 0.703107352436491],
          [99.052734375, -0.04394530819134536],
          [99.580078125, -0.4394488164139641],
          [100.0634765625, -1.2303741774326018],
          [100.5029296875, -2.0210651187669897],
          [100.9423828125, -2.8552627843665705],
          [101.513671875, -3.6449998008920375],
          [102.6123046875, -4.872047700241915],
          [103.623046875, -5.484768018141262],
          [104.3701171875, -6.271618064314865],
          [105.3369140625, -6.140554782450295],
          [105.9521484375, -5.9657536710655235],
          [106.171875, -4.959615024698014],
          [106.171875, -3.7765593098768635],
          [106.34765625, -3.0308121226643703],
          [105.9521484375, -2.5040852618529215],
          [105.2490234375, -2.0210651187669897],
          [104.7216796875, -1.4939713066293112],
          [104.5458984375, -1.1425024037061522],
          [104.1064453125, -0.7031073524364783],
          [103.974609375, -0.04394530819134536],
          [103.798828125, 0.39550467153201946],
          [103.359375, 0.9667509997666425],
          [102.7880859375, 1.7136116598836224],
          [101.9970703125, 2.1088986592431382],
          [100.8984375, 2.547987871471383],
          [100.5908203125, 2.943040910055132],
          [99.8876953125, 3.2940822283128175],
          [99.4482421875, 3.8204080831949407],
          [98.876953125, 4.258768357307995],
          [98.3935546875, 4.653079918274051],
          [97.470703125, 5.528510525692801],
          [96.767578125, 5.484768018141262],
          [95.888671875, 5.878332109674328],
          [95.185546875, 5.834616165610059]]]);
          
// var geometry = Kalimantan;                               


// Draw geometry around area of interest
var samplingArea = Sumatera;                             // Or Sumatera. Change region here !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Map.centerObject(samplingArea, 8);
Map.addLayer(samplingArea, {}, 'samplingArea');
// var point = Map.getCenter();

var Landsat_5_BANDS = ['B1',   'B2',    'B3',  'B4',  'B5',  'B7', 'cfmask'];
var Landsat_7_BANDS = ['B1',   'B2',    'B3',  'B4',  'B5',  'B7', 'cfmask'];
var Landsat_8_BANDS = ['B2',   'B3',    'B4',  'B5',  'B6',  'B7', 'cfmask'];
var STD_NAMES = ['blue', 'green', 'red', 'nir', 'swir1', 'swir2', 'cfmask'];

// create function to mask clouds, cloud shadows, snow using the cfmask layer in SR products
var maskClouds = function(image){
  var cfmask = image.select('cfmask');    
  return image.updateMask(cfmask.lt(1));   // keep clear (0) and water (1) pixels  // HH modified to keep only clear (0)
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Import L5 collections 
// .filterDate('1984-01-01', '2012-05-05')
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
var fromsL5 = ['1984-01-01', '1985-01-01', '1986-01-01',  '1987-01-01',  '1988-01-01',  '1989-01-01', '1990-01-01',
'1991-01-01', '1992-01-01', '1993-01-01',  '1994-01-01',  '1995-01-01',  '1996-01-01', '1997-01-01',
'1998-01-01', '1999-01-01', '2000-01-01',  '2001-01-01',  '2002-01-01',  '2003-01-01', '2004-01-01',
'2005-01-01', '2006-01-01', '2007-01-01',  '2008-01-01',  '2009-01-01',  '2010-01-01', '2011-01-01', '2012-01-01'];

var tosL5 = ['1984-12-31', '1985-12-31', '1986-12-31',  '1987-12-31',  '1988-12-31',  '1989-12-31', '1990-12-31',
'1991-12-31', '1992-12-31', '1993-12-31',  '1994-12-31',  '1995-12-31',  '1996-12-31', '1997-12-31',
'1998-12-31', '1999-12-31', '2000-12-31',  '2001-12-31',  '2002-12-31',  '2003-12-31', '2004-12-31',
'2005-12-31', '2006-12-31', '2007-12-31',  '2008-12-31',  '2009-12-31',  '2010-12-31', '2011-12-31', '2012-12-31'];


// start debug //

// var i = 20;
// print(froms.length, 'froms.length');
// print(froms[20], 'from');
// print(tos[20], 'to');

// var from = froms[20];
// var to = tos[20];

// var landsat5 = ee.ImageCollection('LANDSAT/LT5_SR')
//     .filterDate(from, to)          
//     .select(Landsat_5_BANDS, STD_NAMES)                               
//     .filterBounds(samplingArea).map(maskClouds);  
// print(landsat5, 'landsat5');

// end debug //


for (var i=5; i<fromsL5.length; i++) {                       // javascript indexing starts from 0 !
  var fromL5 = fromsL5[i];
  var toL5 = tosL5[i];
  
  var landsat5 = ee.ImageCollection('LANDSAT/LT5_SR')
      .filterDate(fromL5, toL5)          
      .select(Landsat_5_BANDS, STD_NAMES)                               
      .filterBounds(samplingArea).map(maskClouds);                       
               
  var landsat5NirCount = landsat5.select('nir').count();
  
  Export.image.toDrive({  // or toDrive
    image: landsat5NirCount,
    description: "Landsat5" + fromL5 + "to" + toL5 + "Kal",                    // Change here if Sumatera
    scale: 30,             // Important! 30 meter in this case of Landsat 
    region: samplingArea,
    maxPixels: 1e12
  });
}



// Check results in drive with Landsat5 first before doing it for Landsat7 and Landsat8 ! :) 
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Import L7 collections 
// .filterDate('1999-01-01', '2017-06-11')     
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// var fromsL7 = ['1999-01-01', '2000-01-01', '2001-01-01',  '2002-01-01',  '2003-01-01',  '2004-01-01', '2005-01-01',
// '2006-01-01', '2007-01-01', '2008-01-01',  '2009-01-01',  '2010-01-01',  '2011-01-01', '2012-01-01',
// '2013-01-01', '2014-01-01', '2015-01-01',  '2016-01-01',  '2017-01-01'];

// var tosL7 = ['1999-12-31', '2000-12-31', '2001-12-31',  '2002-12-31',  '2003-12-31',  '2004-12-31', '2005-12-31',
// '2006-12-31', '2007-12-31', '2008-12-31',  '2009-12-31',  '2010-12-31',  '2011-12-31', '2012-12-31',
// '2013-12-31', '2014-12-31', '2015-12-31',  '2016-12-31',  '2017-12-31'];

// for (var i=0; i<fromsL7.length; i++) {                       // javascript indexing starts from 0 !
//   var fromL7 = fromsL7[i];
//   var toL7 = tosL7[i];
  
// var landsat7 = ee.ImageCollection('LANDSAT/LE7_SR')
//     .filterDate(fromL7, toL7)                            
//     .select(Landsat_7_BANDS, STD_NAMES)                                
//     .filterBounds(samplingArea).map(maskClouds);                       
               
//   var landsat7NirCount = landsat7.select('nir').count();
  
//   Export.image.toDrive({  // or toDrive
//     image: landsat7NirCount,
//     description: "Landsat7" + fromL7 + "to" + toL7 + "Kal",                    // Change here if Sumatera
//     scale: 30,             // Important! 30 meter in this case of Landsat 
//     region: samplingArea,
//     maxPixels: 1e12
//   });
// }



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Import L8 collections 
// .filterDate('2013-04-11', '2017-06-12')    
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// var fromsL8 = ['2013-01-01', '2014-01-01', '2015-01-01',  '2016-01-01',  '2017-01-01'];

// var tosL8 = ['2013-12-31', '2014-12-31', '2015-12-31',  '2016-12-31',  '2017-12-31'];

// for (var i=0; i<fromsL8.length; i++) {                       // javascript indexing starts from 0 !
//   var fromL8 = fromsL8[i];
//   var toL8 = tosL8[i];
  
//   var landsat8 = ee.ImageCollection('LANDSAT/LC8_SR')
//       .filterDate(fromL8, toL8)
//       .select(Landsat_8_BANDS, STD_NAMES)
//       .filterBounds(samplingArea).map(maskClouds); 
    
//   var landsat8NirCount = landsat8.select('nir').count();
  
//   Export.image.toDrive({  // or toDrive
//     image: landsat8NirCount,
//     description: "Landsat8" + fromL8 + "to" + toL8 + "Kal",                    // Change here if Sumatera
//     scale: 30,             // Important! 30 meter in this case of Landsat 
//     region: samplingArea,
//     maxPixels: 1e12
//   });
// }

